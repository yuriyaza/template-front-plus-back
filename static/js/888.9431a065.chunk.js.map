{"version":3,"file":"static/js/888.9431a065.chunk.js","mappings":"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","sources":["webpack://template-front-plus-back/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"description\":\"MovieDetails_description__n2kBz\",\"last\":\"MovieDetails_last__WY0yg\",\"backLink\":\"MovieDetails_backLink__haiys\",\"icon\":\"MovieDetails_icon__3Fjif\",\"tabs\":\"MovieDetails_tabs__8xDA5\"};","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation, Link, NavLink, Outlet } from 'react-router-dom';\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport Spinner from 'components/Spinner/Spinner';\nimport * as api from '../../services/apiService';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = ({ isLoading }) => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const { title, poster_path, overview, genres, release_date, vote_average } = movie;\n  const releaseDate = new Date(release_date).getFullYear();\n\n  const location = useLocation();\n  const backLinkURL = useRef(location.state ? location.state.from : '/');\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        isLoading(true);\n        const response = await api.getMovieDetails(movieId);\n        setMovie(response.data);\n      } finally {\n        isLoading(false);\n      }\n    }\n    getData();\n  }, [movieId, isLoading]);\n\n  return (\n    Object.entries(movie).length !== 0 && (\n      <>\n        <div className={css.wrapper}>\n          <div className={css.poster}>\n            <img src={`https://image.tmdb.org/t/p/original${poster_path}`} alt={title} />\n          </div>\n          <div className={css.details}>\n            <h2>{`${title} (${releaseDate})`}</h2>\n            <p className={css.description}>User Score: {vote_average} </p>\n            <h3>Overview</h3>\n            <p className={css.description}>{overview}</p>\n            <h3>Genres</h3>\n            <p className={`${css.description} ${css.last}`}>{genres.map(genre => genre.name).join(', ')}</p>\n            <Link className={css.backLink} to={backLinkURL.current}>\n              <TiArrowBackOutline className={css.icon} size={15} />\n              Back\n            </Link>\n          </div>\n        </div>\n\n        <div className={css.tabs}>\n          <NavLink to='cast'>Cast</NavLink>\n          <NavLink to='reviews'>Reviews</NavLink>\n        </div>\n        <Suspense fallback={<Spinner />}>\n          <Outlet />\n        </Suspense>\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\nimport { Notify } from \"notiflix\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\naxios.defaults.headers.common[\"Authorization\"] =\n  \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjZjJhZTkwYzA1YjE1NjAwZGNlOTQyODUzZTljMDVlYyIsInN1YiI6IjY0OGNjNTY3YzNjODkxMDEyZDVjZWY4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a16iPsTvimiRDA_BdScTTc0a6kzeHOdxxdEjtFmw7IU\";\n\nexport async function getTrending() {\n  try {\n    return await axios.get(`/trending/movie/week?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    return await axios.get(\n      `/search/movie?query=${query}&language=en-US&page=1`\n    );\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}/credits?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}/reviews?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nNotify.init({ showOnlyTheLastOne: true, clickToClose: true });\n\nfunction showError(error) {\n  Notify.failure(`${error.code}: ${error.message}`);\n}\n"],"names":["isLoading","movieId","useParams","useState","movie","setMovie","title","poster_path","overview","genres","release_date","vote_average","releaseDate","Date","getFullYear","location","useLocation","backLinkURL","useRef","state","from","useEffect","api","response","data","getData","Object","entries","length","className","css","src","alt","map","genre","name","join","to","current","size","Suspense","fallback","Spinner","getTrending","axios","showError","searchMovies","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","error","Notify","code","message","showOnlyTheLastOne","clickToClose"],"sourceRoot":""}