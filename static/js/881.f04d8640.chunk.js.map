{"version":3,"file":"static/js/881.f04d8640.chunk.js","mappings":"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","sources":["webpack://template-front-plus-back/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://template-front-plus-back/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"icon\":\"MoviesList_icon__A8S+S\"};","import { useLocation, Link } from 'react-router-dom';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.length !== 0 && (\n        <ul className={css.moviesList}>\n          {movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <span className={css.icon}>\n                  <BiCameraMovie />\n                </span>\n                <Link to={`/movies/${id}/cast`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__KrUqs\",\"searchButton\":\"Movies_searchButton__ieSHM\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport * as api from '../../services/apiService';\nimport css from './Movies.module.css';\n\nNotify.init({ showOnlyTheLastOne: true, clickToClose: true });\n\nconst Movies = ({ isLoading }) => {\n  const [urlParams, setUrlParams] = useSearchParams({});\n  const query = urlParams.get('search');\n\n  const [queryString, setQueryString] = useState(query ? query : '');\n  const [moviesList, setMoviesList] = useState([]);\n\n  function onInputChange(e) {\n    setQueryString(e.target.value);\n  }\n\n  async function onFormSubmit(e) {\n    e.preventDefault();\n    setUrlParams(queryString.trim() !== '' ? { search: queryString } : {});\n\n    if (queryString.trim() === '') {\n      Notify.warning('Please enter movie title to search');\n      setMoviesList([]);\n    }\n  }\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        if (!query) return;\n\n        isLoading(true);\n        const response = await api.searchMovies(query);\n        setMoviesList(response.data.results);\n\n        if (response.data.results.length === 0) Notify.failure('Sorry, this movie not found');\n      } finally {\n        isLoading(false);\n      }\n    }\n    getData();\n  }, [query, isLoading]);\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <input className={css.input} type='text' value={queryString} onChange={onInputChange} />\n        <button className={css.searchButton} type='submit'>\n          <BiSearchAlt size={20} color={'#ffffff'} />\n        </button>\n      </form>\n\n      <MoviesList movies={moviesList} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\nimport { Notify } from \"notiflix\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\naxios.defaults.headers.common[\"Authorization\"] =\n  \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjZjJhZTkwYzA1YjE1NjAwZGNlOTQyODUzZTljMDVlYyIsInN1YiI6IjY0OGNjNTY3YzNjODkxMDEyZDVjZWY4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a16iPsTvimiRDA_BdScTTc0a6kzeHOdxxdEjtFmw7IU\";\n\nexport async function getTrending() {\n  try {\n    return await axios.get(`/trending/movie/week?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    return await axios.get(\n      `/search/movie?query=${query}&language=en-US&page=1`\n    );\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}/credits?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}/reviews?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nNotify.init({ showOnlyTheLastOne: true, clickToClose: true });\n\nfunction showError(error) {\n  Notify.failure(`${error.code}: ${error.message}`);\n}\n"],"names":["movies","location","useLocation","length","className","css","map","id","title","to","state","from","Notify","showOnlyTheLastOne","clickToClose","isLoading","useSearchParams","urlParams","setUrlParams","query","get","useState","queryString","setQueryString","moviesList","setMoviesList","e","preventDefault","trim","search","useEffect","api","response","data","results","getData","onSubmit","type","value","onChange","target","size","color","MoviesList","getTrending","axios","showError","searchMovies","getMovieDetails","movie_id","getMovieCast","getMovieReviews","error","code","message"],"sourceRoot":""}